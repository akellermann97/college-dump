Homework 4, Activity 1:  Learning to use Valgrind

Name: Alexander Kellermann Nieves

Instructions
------------

These questions deal with the song program found in song.c, mtime.c and
songtest.c.  Compile these files as indicated in the assignment writeup.

We have included a compiled copy of the solution "goodsongtest" for you
to run to see how the program should behave.

The nature of these activities will have you switching back and forth
between running valgrind and looking at code. You may find it helpful to
have a second shell window open; run valgrind in the first window, and 
execute other commands (such as 'more', or an editor) in the second window.

Questions
---------

1. Run "songtest" using the valgrind command:
      valgrind --leak-check=full songtest
   Look at the summary information at the end of the valgrind output.

   a. How many bytes of memory are reported lost?
    436 bytes in 12 blocks are reported lost

******************** Your answer below (3 points) ********************

***********************************************************

   b. How many bytes of memory are still in use when the program exited?
There are 436 bytes in 12 blocks still in use

******************** Your answer below (3 points) ********************

***********************************************************

   c. How many allocation and deallocation calls were made?
there were 60 alloc's made, and 50 free's

******************** Your answer below (4 points) ********************

***********************************************************

2. The output from valgrind indicates many different errors, but most
   are caused by the same statements in the program being executed
   again and again.

   a. List all the different types of errors reported by valgrind, and
      how many times each occurred.  Consider only messages printed
      before the summary of heap usage.

There are invalid free() calls made
There are invalid writes made (of size 1)
There are invalid reads made (of size 1)

******************** Your answer below (3 points) ********************

***********************************************************

   b. At what lines in the source file are the memory blocks being
      allocated?
Line 101 there is a malloc() call made
Line 104 there is a malloc() call made

******************** Your answer below (2 points) ********************

***********************************************************

   c. At what lines in the source file are the invalid read and write
      accesses to the memory blocks occurring?
Line 102 there is a strcpy() call made
Line 105 there is a strcpy() call made
Line 61 there is a strlen() call made
Line 62 there is a strcpy() call made
Line 53 there is a strlen() call made
Line 54 there is a strcpy() call made
Line 85 there is a strcmp() call made
Line 86 there is a strcmp() call made


******************** Your answer below (2 points) ********************

***********************************************************

   d. Based on this information, what is the source of the invalid read
      and write errors?

******************** Your answer below (3 points) ********************

***********************************************************

Given the knowledge gained from the previous question, correct these
errors and then recompile and retest the program.  The invalid memory
access errors should no longer occur.

3. Run valgrind again. Notice that after the program output valgrind
   reports two occurrences of "Invalid free()".

   a. In what function do these errors occur, and how many times is
      that function called from main()?

******************** Your answer below (4 points) ********************

***********************************************************

   b. How many times is free() called from inside that function itself
      (i.e., not from any other functions it calls)?

******************** Your answer below (3 points) ********************

***********************************************************

   c. What fix is needed to eliminate the "Invalid free()" message?

******************** Your answer below (3 points) ********************

***********************************************************

Make the fix you described, re-build and re-run the program.  The "Invalid
free" errors should no longer appear.

4. In the "HEAP SUMMARY" section, there are number of error reports
   regarding lost blocks of memory.

   a. In which functions were the calls to malloc() made which allocated
      the blocks that were lost, and what data items were they allocating
      space for?

******************** Your answer below (4 points) ********************

***********************************************************

   b. Examine the code to determine what you need to change to fix each
      of the problems. Explain your solution.

******************** Your answer below (2 points) ********************

***********************************************************

   c. The memory allocated by these functions is returned by them to
      the calling function; this effectively transfers the responsiblity
      for deallocating the memory to the caller as well.  Where is the
      most logical place for this memory to be deallocated?

******************** Your answer below (4 points) ********************

***********************************************************

Make the necessary changes to the code to correct these final errors.
At this point, if you did your work correctly, your program should run
to completion with no memory management errors detected by valgrind.
